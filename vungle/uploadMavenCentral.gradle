ext {
    libraryName = 'vungle-ads'
    artifact = 'vungle-ads'

    libraryDescription = "Vungle Android AdMob adapter V7"

    siteUrl = 'https://github.com/Vungle/vng-android-sdk'
    gitUrl = 'https://github.com/Vungle/vng-android-sdk.git'

    libraryVersion = stringVersion

    licenseName = 'Vungle SDK License'
    licenseUrl = 'https://github.com/Vungle/Android-SDK/blob/master/LICENSE.md'
    allLicenses = ["VungleSdkLicense"]
}

group = stringGroupId                               // Maven Group ID for the artifact
version = libraryVersion

apply plugin: 'maven-publish'
//apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

publishing {
    publications {
        vungleSDK(MavenPublication) {
            groupId group
            artifactId libraryName
            version libraryVersion
            if (project.plugins.findPlugin("com.android.library")) {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            } else {
                artifact("$buildDir/libs/${project.getName()}-${version}.jar")
            }

            artifact androidSourcesJar
            pom {
                name = libraryName
                description = libraryDescription
                url = siteUrl

                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                    }
                }
                developers {
                    developer {
                        id = 'felixzhang0703'
                        name = 'Felix Zhang'
                        email = 'felix.zhang@vungle.com'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:Vungle/vng-android-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com:Vungle/vng-android-sdk.git'
                    url = 'https://github.com/Vungle/vng-android-sdk.git'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        if (it.name != "unspecified" && it.group != "vng-android-sdk") {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "vungle"

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

//signing {
//    sign publishing.publications.vungleSDK
//}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = group
                artifactId = libraryName
                version = libraryVersion
            }
        }
    }
}
